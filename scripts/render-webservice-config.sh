#!/bin/bash

# =============================================================================
# render-webservice-config.sh - Configuraci√≥n del Web Service en Render
# =============================================================================
# Gu√≠a paso a paso para configurar ZentoERP en Render

set -e

echo "üöÄ Configuraci√≥n del Web Service ZentoERP en Render"
echo "=================================================="

echo ""
echo "üìã CONFIGURACI√ìN B√ÅSICA:"
echo "------------------------"
echo "Repository: https://github.com/gmartincor/zento_erp"
echo "Branch: production"
echo "Service Name: zentoerp-web"
echo "Environment: Web Service"

echo ""
echo "üê≥ CONFIGURACI√ìN DOCKER:"
echo "------------------------"
echo "‚úÖ Use Docker: YES"
echo "Dockerfile Path: Dockerfile"
echo "Docker Context: . (root)"
echo "Docker Command: (usar el CMD del Dockerfile)"

echo ""
echo "‚öôÔ∏è  CONFIGURACI√ìN DE BUILD:"
echo "---------------------------"
echo "Build Command:"
echo "  ./scripts/render-deploy.sh"
echo ""
echo "Start Command:"
echo "  gunicorn --bind 0.0.0.0:\$PORT --workers 3 --worker-class sync --max-requests 1000 --max-requests-jitter 100 --timeout 30 --keep-alive 2 --log-level info --access-logfile - --error-logfile - config.wsgi:application"

echo ""
echo "üîß VARIABLES DE ENTORNO REQUERIDAS:"
echo "-----------------------------------"

echo ""
echo "# üîê Django Configuration"
echo "DJANGO_SETTINGS_MODULE=config.settings.production"
echo "DEBUG=False"
echo "ALLOWED_HOSTS=zentoerp.com,*.zentoerp.com,zentoerp-web.onrender.com"

echo ""
echo "# üîë Security"
echo "SECRET_KEY=[GENERAR_CLAVE_SEGURA]"

echo ""
echo "# üóÑÔ∏è  Database (PostgreSQL)"
echo "DATABASE_URL=postgresql://usuario:password@host:puerto/database"
echo "DB_NAME=tu_database_name"
echo "DB_USER=tu_database_user"
echo "DB_PASSWORD=tu_database_password"
echo "DB_HOST=tu_database_host"
echo "DB_PORT=5432"

echo ""
echo "# üöÄ Cache Configuration (sin Redis)"
echo "CACHE_BACKEND=database"

echo ""
echo "# üìÅ Static Files"
echo "STATIC_URL=/static/"
echo "MEDIA_URL=/media/"

echo ""
echo "# üåê Multi-tenant Configuration"
echo "TENANT_MODEL=tenants.Client"
echo "TENANT_DOMAIN_MODEL=tenants.Domain"

echo ""
echo "üîë GENERAR SECRET_KEY SEGURA:"
echo "-----------------------------"
echo "Usar el siguiente comando para generar una clave segura:"
echo ""
echo "python -c \"from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())\""

echo ""
echo "üèóÔ∏è  PASOS DE CONFIGURACI√ìN:"
echo "---------------------------"
echo "1. ‚úÖ Crear Web Service en Render"
echo "2. ‚úÖ Conectar repositorio: gmartincor/zento_erp"
echo "3. ‚úÖ Seleccionar rama: production"
echo "4. ‚úÖ Habilitar Docker"
echo "5. ‚úÖ Configurar variables de entorno"
echo "6. ‚úÖ Hacer primer deploy"
echo "7. ‚úÖ Configurar dominio personalizado"
echo "8. ‚úÖ Configurar DNS"
echo "9. ‚úÖ Probar multi-tenant"

echo ""
echo "üåê CONFIGURACI√ìN DE DOMINIO:"
echo "----------------------------"
echo "Despu√©s del primer deploy exitoso:"
echo "‚Ä¢ Ir a Settings > Custom Domains"
echo "‚Ä¢ Agregar: zentoerp.com"
echo "‚Ä¢ Agregar: *.zentoerp.com (wildcard)"
echo "‚Ä¢ Verificar DNS configuration"
echo "‚Ä¢ Activar SSL autom√°tico"

echo ""
echo "üîç VERIFICACI√ìN POST-DEPLOY:"
echo "----------------------------"
echo "‚Ä¢ https://zentoerp-web.onrender.com (URL temporal)"
echo "‚Ä¢ https://zentoerp.com (dominio principal)"
echo "‚Ä¢ https://demo.zentoerp.com (ejemplo multi-tenant)"
echo "‚Ä¢ /admin/ (panel de administraci√≥n)"
echo "‚Ä¢ /health/ (health check)"

echo ""
echo "üìä CONFIGURACI√ìN RECOMENDADA:"
echo "-----------------------------"
echo "Plan: Starter ($7/mes) o Professional ($25/mes)"
echo "Recursos: 512MB RAM, 0.5 CPU (Starter)"
echo "Auto-deploy: Habilitado en rama production"
echo "Health Check: /health/"

echo ""
echo "üö® CHECKLIST PREVIO AL DEPLOY:"
echo "------------------------------"
echo "‚ñ° PostgreSQL database creado y configurado"
echo "‚ñ° Variables de entorno configuradas"
echo "‚ñ° SECRET_KEY generada y configurada"
echo "‚ñ° ALLOWED_HOSTS actualizado"
echo "‚ñ° Docker habilitado"
echo "‚ñ° Repositorio y rama correctos"

echo ""
echo "üí° TROUBLESHOOTING:"
echo "------------------"
echo "‚Ä¢ Logs: Dashboard > Logs en Render"
echo "‚Ä¢ Build failed: Verificar scripts/render-deploy.sh"
echo "‚Ä¢ Database connection: Verificar DATABASE_URL"
echo "‚Ä¢ Static files: Verificar STATIC_URL y collectstatic"
echo "‚Ä¢ Multi-tenant: Verificar ALLOWED_HOSTS con wildcards"

echo ""
echo "üìù SIGUIENTE PASO:"
echo "-----------------"
echo "1. Completa la configuraci√≥n del Web Service"
echo "2. Haz el primer deploy"
echo "3. Configura el dominio personalizado"
echo "4. Ejecuta: ./scripts/dns-config.sh"

echo ""
echo "üéØ ¬°LISTO PARA DEPLOY!"
echo "====================="
