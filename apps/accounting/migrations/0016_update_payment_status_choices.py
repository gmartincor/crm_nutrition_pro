# Generated by Django 4.2.16 on 2025-07-03 09:19

from django.db import migrations, models


def migrate_period_created_to_appropriate_status(apps, schema_editor):
    ServicePayment = apps.get_model('accounting', 'ServicePayment')
    from datetime import date
    
    today = date.today()
    
    for payment in ServicePayment.objects.filter(status='PERIOD_CREATED'):
        if today < payment.period_start:
            payment.status = 'AWAITING_START'
        elif today <= payment.period_end:
            payment.status = 'UNPAID_ACTIVE'
        else:
            payment.status = 'OVERDUE'
        payment.save()


def reverse_migrate_statuses(apps, schema_editor):
    ServicePayment = apps.get_model('accounting', 'ServicePayment')
    ServicePayment.objects.filter(
        status__in=['AWAITING_START', 'UNPAID_ACTIVE']
    ).update(status='PERIOD_CREATED')


class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0015_remove_pending_status'),
    ]

    operations = [
        migrations.RunPython(
            migrate_period_created_to_appropriate_status,
            reverse_migrate_statuses,
        ),
        migrations.AlterField(
            model_name='servicepayment',
            name='status',
            field=models.CharField(choices=[('AWAITING_START', 'Pendiente de pago'), ('UNPAID_ACTIVE', 'Sin pagar'), ('PAID', 'Pagado'), ('OVERDUE', 'Vencido'), ('CANCELLED', 'Cancelado'), ('REFUNDED', 'Reembolsado')], default='AWAITING_START', max_length=15, verbose_name='Estado'),
        ),
    ]
