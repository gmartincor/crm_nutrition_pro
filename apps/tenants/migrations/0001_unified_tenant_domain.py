# Generated by Django 4.2.16 on 2025-07-18 10:00 - UNIFIED CLEAN MIGRATION
# This migration creates the complete, final state for tenants app
# SAFE for new databases - ONLY creation operations, NO dangerous operations

from django.db import migrations, models
import django.db.models.deletion
import django_tenants.postgresql_backend.base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        # No dependencies - this is the new unified initial migration
    ]

    operations = [
        # 1. Create Tenant model with ALL final fields
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                # django-tenants required fields
                ('schema_name', models.CharField(
                    db_index=True, 
                    max_length=63, 
                    unique=True, 
                    validators=[django_tenants.postgresql_backend.base._check_schema_name]
                )),
                # Timestamp fields
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                # Soft delete fields
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de eliminación')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Eliminado')),
                # Business fields
                ('name', models.CharField(
                    max_length=255, 
                    verbose_name='Nombre del nutricionista',
                    help_text='Nombre completo del profesional'
                )),
                ('email', models.EmailField(
                    unique=True, 
                    verbose_name='Correo electrónico',
                    help_text='Email principal del nutricionista'
                )),
                ('phone', models.CharField(
                    max_length=20, 
                    blank=True, 
                    null=True, 
                    verbose_name='Teléfono'
                )),
                ('professional_number', models.CharField(
                    max_length=50, 
                    blank=True, 
                    verbose_name='Número de colegiado',
                    help_text='Número de colegiado profesional'
                )),
                ('status', models.CharField(
                    max_length=20,
                    choices=[
                        ('PENDING', 'Pendiente'),
                        ('ACTIVE', 'Activo'),
                        ('SUSPENDED', 'Suspendido'),
                        ('INACTIVE', 'Inactivo')
                    ],
                    default='PENDING',
                    verbose_name='Estado',
                    db_index=True
                )),
                ('is_active', models.BooleanField(
                    default=True, 
                    verbose_name='Activo',
                    help_text='Define si el tenant puede acceder al sistema'
                )),
                ('notes', models.TextField(
                    blank=True, 
                    verbose_name='Notas',
                    help_text='Información adicional sobre el nutricionista'
                )),
            ],
            options={
                'db_table': 'tenants_tenant',
                'verbose_name': 'Nutricionista',
                'verbose_name_plural': 'Nutricionistas',
                'ordering': ['-created'],
            },
        ),
        
        # 2. Create Domain model (required by django-tenants)
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=253, unique=True)),
                ('is_primary', models.BooleanField(db_index=True, default=True)),
                ('tenant', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, 
                    related_name='domains', 
                    to='tenants.tenant'
                )),
            ],
            options={
                'abstract': False,
            },
        ),
        
        # 3. Add optimized indexes for performance
        migrations.AddIndex(
            model_name='tenant',
            index=models.Index(fields=['email'], name='tenants_ten_email_idx'),
        ),
        migrations.AddIndex(
            model_name='tenant',
            index=models.Index(fields=['status', 'is_active'], name='tenants_ten_status_active_idx'),
        ),
        migrations.AddIndex(
            model_name='tenant',
            index=models.Index(fields=['is_deleted', 'status'], name='tenants_ten_deleted_status_idx'),
        ),
        migrations.AddIndex(
            model_name='tenant',
            index=models.Index(fields=['schema_name'], name='tenants_ten_schema_idx'),
        ),
    ]
