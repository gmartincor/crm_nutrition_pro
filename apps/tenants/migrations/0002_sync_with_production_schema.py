# Generated by Django 4.2.16 on 2025-07-18 13:25

from django.db import migrations, models
from django.utils.text import slugify


def populate_tenant_slugs(apps, schema_editor):
    """
    Populate slug field for existing tenants with unique values.
    This is a data migration to handle existing tenants safely.
    """
    Tenant = apps.get_model('tenants', 'Tenant')
    
    # Track used slugs to ensure uniqueness
    used_slugs = set()
    
    for tenant in Tenant.objects.all():
        # Generate base slug from name or schema_name
        if tenant.name:
            base_slug = slugify(tenant.name)
        else:
            base_slug = tenant.schema_name
        
        # Ensure slug is unique
        unique_slug = base_slug
        counter = 1
        while unique_slug in used_slugs or Tenant.objects.filter(slug=unique_slug).exists():
            unique_slug = f"{base_slug}-{counter}"
            counter += 1
        
        # Update tenant with unique slug
        tenant.slug = unique_slug
        tenant.save(update_fields=['slug'])
        used_slugs.add(unique_slug)
        
        print(f"Updated tenant '{tenant.name}' (ID: {tenant.id}) with slug: '{unique_slug}'")


def reverse_populate_tenant_slugs(apps, schema_editor):
    """
    Reverse operation: clear all slug fields
    """
    Tenant = apps.get_model('tenants', 'Tenant')
    Tenant.objects.update(slug='')


class Migration(migrations.Migration):

    dependencies = [
        ('tenants', '0001_initial'),
    ]

    operations = [
        # Step 1: Add slug field without unique constraint
        migrations.AddField(
            model_name='tenant',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL slug for tenant identification', max_length=255, null=True),
        ),
        
        # Step 2: Populate slugs for existing tenants
        migrations.RunPython(
            populate_tenant_slugs,
            reverse_populate_tenant_slugs,
        ),
        
        # Step 3: Add unique constraint after data is populated
        migrations.AlterField(
            model_name='tenant',
            name='slug',
            field=models.SlugField(blank=False, help_text='URL slug for tenant identification', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='notes',
            field=models.TextField(blank=True, default='', help_text='Información adicional sobre el nutricionista', verbose_name='Notas'),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='phone',
            field=models.CharField(blank=True, default='', max_length=20, verbose_name='Teléfono'),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='professional_number',
            field=models.CharField(blank=True, default='', help_text='Número de colegiado profesional', max_length=50, verbose_name='Número de colegiado'),
        ),
    ]
